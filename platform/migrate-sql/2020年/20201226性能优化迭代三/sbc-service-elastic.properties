# ----------------------------------------
# application info
# ----------------------------------------
info.app.name=sbc-service-elastic
info.app.description=sbc-service-elastic
info.build.artifact=@project.artifactId@
info.build.version=@project.version@


# ----------------------------------------
# actuator settings
# ----------------------------------------
manager.mode=s2b
management.server.port=8851
management.endpoints.enabled-by-default=false
management.endpoints.web.base-path=/act
management.endpoint.info.enabled=true
management.endpoint.health.enabled=true
management.endpoint.mappings.enabled=true
management.endpoint.env.enabled=true
management.endpoint.health.show-details=always
management.endpoints.web.exposure.include=health,info,mappings,env
# ----------------------------------------
# log config
# ----------------------------------------
logging.level.root=INFO
logging.level.com.wanmi=INFO
logging.level.org.springframework=WARN
logging.config=classpath:logback.xml
# ----------------------------------------
# interface log config
# ----------------------------------------
request.log.enable=true
request.log.need-result=true
request.log.log-type=0
# ----------------------------------------
# server settings
# ----------------------------------------
server.port=8850
server.servlet.session.timeout=30
server.tomcat.max-threads=200
server.error.whitelabel.enabled=false
server.error.include-stacktrace=ALWAYS
spring.jpa.show-sql=true
spring.jpa.open-in-view=true
server.tomcat.basedir=/data/sbc/elastic/tmp
# ----------------------------------------
# spring cloud
# ----------------------------------------
spring.application.name=sbc-service-elastic
spring.cloud.nacos.discovery.server-addr=172.19.25.60:8848

#-----------------------------------------------
# seata
#-----------------------------------------------
seata.application-id=sbc-service-elastic
#Seata 事务组编号，用于 TC 集群名 Seata 服务配置项，对应 ServiceProperties 类
seata.tx-service-group=sbc-service-elastic-group
# 虚拟组和分组的映射
seata.service.vgroup-mapping.sbc-service-elastic-group=default
seata.registry.type=nacos
seata.registry.nacos.server-addr=172.19.25.60:8848
seata.registry.nacos.namespace=public
seata.registry.nacos.cluster=default

spring.jackson.date-format=yyyy-MM-dd HH:mm:ss
spring.jackson.serialization.write-null-map-values=true

spring.data.elasticsearch.cluster-name=elasticsearch
spring.data.elasticsearch.cluster-nodes=172.19.25.60:9300
spring.elasticsearch.rest.uris=http://172.19.25.60:9200
# ----------------------------------------
# lcn分布式事务
# ----------------------------------------
#由于springcloud默认是开启的重试机制，开启次机制以后会导致当springcloud请求超时时会重复调用>业务模块，从而会引发数据混乱
ribbon.MaxAutoRetriesNextServer=0
ribbon.ReadTimeout=50000
ribbon.ConnectTimeout=50000

redisson.injection=false

# ----------------------------------------
# rabbitmq config
# ----------------------------------------
spring.rabbitmq.host=
spring.rabbitmq.port=5672
spring.rabbitmq.username=guest
spring.rabbitmq.password=guest
spring.cloud.stream.default.group=group-1
