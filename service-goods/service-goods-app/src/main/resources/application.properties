# ----------------------------------------
# application info
# ----------------------------------------
info.app.name=sbc-service-goods
info.app.description=sbc-service-goods
info.build.artifact=@project.artifactId@
info.build.version=@project.version@
# ----------------------------------------
# actuator settings
# ----------------------------------------
manager.mode=s2b
management.server.port=8951
management.endpoints.enabled-by-default=false
management.endpoints.web.base-path=/act
management.endpoint.info.enabled=true
management.endpoint.health.enabled=true
management.endpoint.mappings.enabled=true
management.endpoint.env.enabled=true
management.endpoint.health.show-details=always
management.endpoints.web.exposure.include=health,info,mappings,env
# ----------------------------------------
# log config
# ----------------------------------------
logging.level.root=INFO
logging.level.com.wanmi=INFO
logging.level.org.springframework=WARN
#logging.config=/data/sbc-new/goods/conf/logback.xml
# ----------------------------------------
# interface log config
# ----------------------------------------
request.log.enable=true
request.log.need-result=true
request.log.log-type=0
# ----------------------------------------
# server settings
# ----------------------------------------
server.port=8950
server.servlet.session.timeout=30
server.tomcat.max-threads=200
server.error.whitelabel.enabled=false
server.error.include-stacktrace=ALWAYS
spring.jpa.show-sql=true
spring.jpa.open-in-view=true
#server.tomcat.basedir=/data/sbc-new/goods/tmp
# ----------------------------------------
# spring cloud
# ----------------------------------------
spring.application.name=sbc-service-goods
spring.cloud.nacos.discovery.server-addr=nacos.dushu365.com:8848
# ----------------------------------------
# datasource
# ----------------------------------------

seata.registry.type=nacos
seata.registry.nacos.server-addr=nacos.dushu365.com:8848
seata.registry.nacos.namespace=public
seata.registry.nacos.cluster=default
seata.sharding.enable=true
seata.enabled=true
seata.application-id=sbc-service-goods
#Seata 事务组编号，用于 TC 集群名 Seata 服务配置项，对应 ServiceProperties 类
seata.tx-service-group=sbc-service-goods-group
# 虚拟组和分组的映射
seata.service.vgroup-mapping.sbc-service-goods-group=default
seata.enableAutoDataSourceProxy=false

wm.mysql.db.master.username=fddsh_mall
wm.mysql.db.master.password=malladmin@2018
wm.mysql.db.master.url=rm-bp182fitehfamv41c.mysql.rds.aliyuncs.com
wm.mysql.db.slave0.username=fddsh_mall
wm.mysql.db.slave0.password=malladmin@2018
wm.mysql.db.slave0.url=rm-bp182fitehfamv41c.mysql.rds.aliyuncs.com
wm.mysql.db.name=sbc-goods


# ----------------------------------------
# datasource
# ----------------------------------------
spring.shardingsphere.enabled=true
spring.shardingsphere.datasource.names=master,slave0
#spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.shardingsphere.datasource.master.driver-class-name=com.mysql.cj.jdbc.Driver
spring.shardingsphere.datasource.master.url=jdbc:mysql://${wm.mysql.db.master.url}:3306/${wm.mysql.db.name}?characterEncoding=UTF-8&serverTimezone=Asia/Shanghai&allowMultiQueries=true
spring.shardingsphere.datasource.master.username=${wm.mysql.db.master.username}
spring.shardingsphere.datasource.master.password=${wm.mysql.db.master.password}
spring.shardingsphere.datasource.master.type=com.alibaba.druid.pool.DruidDataSource
spring.shardingsphere.datasource.master.filters=stat
spring.shardingsphere.datasource.master.maxActive=20
spring.shardingsphere.datasource.master.initialSize=1
spring.shardingsphere.datasource.master.maxWait=60000
spring.shardingsphere.datasource.master.minIdle=1
spring.shardingsphere.datasource.master.timeBetweenEvictionRunsMillis=60000
spring.shardingsphere.datasource.master.minEvictableIdleTimeMillis=300000
spring.shardingsphere.datasource.master.validationQuery=select 1
spring.shardingsphere.datasource.master.testWhileIdle=true
spring.shardingsphere.datasource.master.testOnBorrow=false
spring.shardingsphere.datasource.master.testOnReturn=false
spring.shardingsphere.datasource.master.poolPreparedStatements=true
spring.shardingsphere.datasource.master.maxOpenPreparedStatements=20
spring.shardingsphere.datasource.master.removeAbandoned=true
spring.shardingsphere.datasource.master.removeAbandonedTimeout=60
spring.shardingsphere.datasource.master.validationInterval=30000

spring.shardingsphere.datasource.slave0.driver-class-name=com.mysql.cj.jdbc.Driver
spring.shardingsphere.datasource.slave0.url=jdbc:mysql://${wm.mysql.db.slave0.url}:3306/${wm.mysql.db.name}?characterEncoding=UTF-8&&zeroDateTimeBehavior=convertToNull&autoReconnect=true&failOverReadOnly=false&connectTimeout=0&serverTimezone=Asia/Shanghai&allowMultiQueries=true
spring.shardingsphere.datasource.slave0.username=${wm.mysql.db.slave0.username}
spring.shardingsphere.datasource.slave0.password=${wm.mysql.db.slave0.password}
spring.shardingsphere.datasource.slave0.type=com.alibaba.druid.pool.DruidDataSource
spring.shardingsphere.datasource.slave0.filters=stat
spring.shardingsphere.datasource.slave0.maxActive=20
spring.shardingsphere.datasource.slave0.initialSize=1
spring.shardingsphere.datasource.slave0.maxWait=60000
spring.shardingsphere.datasource.slave0.minIdle=1
spring.shardingsphere.datasource.slave0.timeBetweenEvictionRunsMillis=60000
spring.shardingsphere.datasource.slave0.minEvictableIdleTimeMillis=300000
spring.shardingsphere.datasource.slave0.validationQuery=select 1
spring.shardingsphere.datasource.slave0.testWhileIdle=true
spring.shardingsphere.datasource.slave0.testOnBorrow=false
spring.shardingsphere.datasource.slave0.testOnReturn=false
spring.shardingsphere.datasource.slave0.poolPreparedStatements=true
spring.shardingsphere.datasource.slave0.maxOpenPreparedStatements=20
spring.shardingsphere.datasource.slave0.removeAbandoned=true
spring.shardingsphere.datasource.slave0.removeAbandonedTimeout=60
spring.shardingsphere.datasource.slave0.validationInterval=30000

spring.shardingsphere.sharding.tables.virtual_coupon_code.actual-data-nodes=ds0.virtual_coupon_code_$->{0..9}
spring.shardingsphere.sharding.tables.virtual_coupon_code.table-strategy.standard.sharding-column=coupon_id
spring.shardingsphere.sharding.tables.virtual_coupon_code.table-strategy.standard.precise-algorithm-class-name=com.wanmi.sbc.goods.algorithm.VirtualCouponCodeShardingAlgorithm
spring.shardingsphere.sharding.binding-tables=virtual_coupon_code


spring.shardingsphere.sharding.master-slave-rules.ds0.master-data-source-name=master
spring.shardingsphere.sharding.master-slave-rules.ds0.slave-data-source-names=slave0
spring.shardingsphere.sharding.master-slave-rules.ds0.load-balance-algorithm-type=round_robin

# 开启SQL显示，默认值: false，注意：仅配置读写分离时不会打印日志
spring.shardingsphere.props.sql.show=true
spring.main.allow-bean-definition-overriding=true


spring.jpa.database=mysql
spring.jpa.hibernate.ddl-auto=none


spring.messages.basename=i18n/ResultCode
####mongo
#mongo.transction.enable = true
#spring.data.mongodb.host=172.19.25.27
#spring.data.mongodb.port=27017
#spring.data.mongodb.database=s2b
#spring.data.mongodb.repositories.type=auto
# ----------------------------------------
# redis config
# ----------------------------------------
spring.redis.host=172.16.72.228
spring.redis.port=6379
spring.redis.database=0
spring.redis.password=20@!nian
spring.redis.timeout=5000
spring.redis.lettuce.pool.max-active=20
spring.redis.lettuce.pool.max-idle=10
#redisson
redisson.url=172.16.72.228:6379
redisson.password=20@!nian
redisson.database=0
redisson.injection=true
# ----------------------------------------
# json message converter
# ----------------------------------------
spring.jackson.date-format=yyyy-MM-dd HH:mm:ss
spring.jackson.serialization.write-null-map-values=true
# ----------------------------------------
# lcn分布式事务
# ----------------------------------------
#由于springcloud默认是开启的重试机制，开启次机制以后会导致当springcloud请求超时时会重复调用>业务模块，从而会引发数据混乱
ribbon.MaxAutoRetriesNextServer=0
ribbon.ReadTimeout=5000
ribbon.ConnectTimeout=5000

# ----------------------------------------
# rabbitmq config
# ----------------------------------------
spring.rabbitmq.host=172.16.72.228
spring.rabbitmq.port=5672
spring.rabbitmq.username=guest
spring.rabbitmq.password=guest
spring.cloud.stream.default.group=group-1

# -----------------------------------------
# 库存同步mq相关
# -----------------------------------------
spring.cloud.stream.bindings.goods-info-stock-sub-output.destination=q.goods.info.stock.sub.data.request
spring.cloud.stream.bindings.goods-info-stock-sub-input.destination=q.goods.info.stock.sub.data.request
spring.cloud.stream.bindings.goods-info-stock-add-output.destination=q.goods.info.stock.add.data.request
spring.cloud.stream.bindings.goods-info-stock-add-input.destination=q.goods.info.stock.add.data.request
spring.cloud.stream.bindings.goods-info-stock-reset-input.destination=q.goods.info.stock.reset.data.request
spring.cloud.stream.bindings.goods-info-stock-reset-output.destination=q.goods.info.stock.reset.data.request

# ehcache
spring.cache.type=ehcache
spring.cache.ehcache.config=classpath:ehcache.xml
spring.cache.cache-names=GOODS,GOODS_LABEL_LIST

feign.sentinel.enabled=true
#
fandeng.host=http://open-platform-test.dushu365.com
#fandeng.host=https://open-platform.dushu.io
fandeng.appid=fd60ebd902cbd48b7c
fandeng.appsecret=b30906b55312d4360d4039d85a8c88b77a3e7124
default.providerId=123456781
bookuu.default.companyId=1183
bookuu.default.storeId=123458039
bookuu.default.cateId=1203
bookuu.default.freight.tempId=461
bookuu.default.store.cateId=1248
prop.list=[{"propId":1,"propValue":"author"},{"propId":2,"propValue":"publishName"},{"propId":3,"propValue":"score"},{"propId":4,"propValue":"price"},{"propId":5,"propValue":"isbn"}]
