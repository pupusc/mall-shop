<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.wanmi.sbc.bookmeta.mapper.MetaLabelMapper">

    <resultMap type="com.wanmi.sbc.bookmeta.entity.MetaLabel" id="MetaLabelMap">
        <result property="id" column="id" jdbcType="INTEGER"/>
        <result property="name" column="name" jdbcType="VARCHAR"/>
        <result property="status" column="status" jdbcType="INTEGER"/>
        <result property="createTime" column="create_time" jdbcType="TIMESTAMP"/>
        <result property="updateTime" column="update_time" jdbcType="TIMESTAMP"/>
        <result property="delFlag" column="del_flag" jdbcType="INTEGER"/>
        <result property="descr" column="descr" jdbcType="VARCHAR"/>
        <result property="seq" column="seq" jdbcType="INTEGER"/>
        <result property="parentId" column="parent_id" jdbcType="INTEGER"/>
        <result property="type" column="type" jdbcType="INTEGER"/>
        <result property="scene" column="scene" jdbcType="INTEGER"/>
        <result property="path" column="path" jdbcType="VARCHAR"/>
        <result property="isStatic" column="is_static" jdbcType="INTEGER"/>
        <result property="isRun" column="is_run" jdbcType="INTEGER"/>
        <result property="runFromTime" column="run_from_time" jdbcType="TIMESTAMP"/>
        <result property="runToTime" column="run_to_time" jdbcType="TIMESTAMP"/>
        <result property="showStatus" column="show_status" jdbcType="INTEGER"/>
        <result property="showImg" column="show_img" jdbcType="VARCHAR"/>
        <result property="showText" column="show_text" jdbcType="VARCHAR"/>
        <result property="remark" column="remark" jdbcType="VARCHAR"/>
        <result property="isShow" column="is_show" jdbcType="INTEGER"/>
    </resultMap>

    <resultMap type="com.wanmi.sbc.bookmeta.entity.MetaLabelV2" id="MetaLabelMapV2">
        <result property="id" column="id" jdbcType="INTEGER"/>
        <result property="name" column="name" jdbcType="VARCHAR"/>
        <result property="status" column="status" jdbcType="INTEGER"/>
        <result property="createTime" column="create_time" jdbcType="TIMESTAMP"/>
        <result property="updateTime" column="update_time" jdbcType="TIMESTAMP"/>
        <result property="delFlag" column="del_flag" jdbcType="INTEGER"/>
        <result property="descr" column="descr" jdbcType="VARCHAR"/>
        <result property="seq" column="seq" jdbcType="INTEGER"/>
        <result property="parentId" column="parent_id" jdbcType="INTEGER"/>
        <result property="type" column="type" jdbcType="INTEGER"/>
        <result property="scene" column="scene" jdbcType="INTEGER"/>
        <result property="path" column="path" jdbcType="VARCHAR"/>
        <result property="isStatic" column="is_static" jdbcType="INTEGER"/>
        <result property="isRun" column="is_run" jdbcType="INTEGER"/>
        <result property="runFromTime" column="run_from_time" jdbcType="TIMESTAMP"/>
        <result property="runToTime" column="run_to_time" jdbcType="TIMESTAMP"/>
        <result property="showStatus" column="show_status" jdbcType="INTEGER"/>
        <result property="showImg" column="show_img" jdbcType="VARCHAR"/>
        <result property="showText" column="show_text" jdbcType="VARCHAR"/>
        <result property="remark" column="remark" jdbcType="VARCHAR"/>
        <result property="isShow" column="is_show" jdbcType="INTEGER"/>
        <result property="goodsId" column="goods_id" jdbcType="VARCHAR"/>
        <result property="goodsName" column="goods_name" jdbcType="VARCHAR"/>
    </resultMap>

    <resultMap id="GoodsOtherDetail" type="com.wanmi.sbc.bookmeta.entity.GoodsOtherDetail">
        <result property="goodsId" column="goods_id" jdbcType="VARCHAR"/>
        <result property="goodsShowType" column="goods_show_type" jdbcType="VARCHAR"/>
        <result property="goodsDetail" column="goods_detail" jdbcType="VARCHAR"/>
        <result property="orderShowType" column="order_show_type" jdbcType="VARCHAR"/>
        <result property="orderDetail" column="order_detail" jdbcType="VARCHAR"/>
    </resultMap>



    <!--查询单个-->
    <select id="queryById" resultMap="MetaLabelMap">
        select
          id, name, status, create_time, update_time, del_flag, descr, seq, parent_id, type, scene, path
             , is_static, is_run, run_from_time, run_to_time, show_status, show_img, show_text, remark, is_show
        from meta_label
        where id = #{id}
            and del_flag = 0
    </select>

    <!--查询指定行数据-->
    <select id="queryAllByLimit" resultMap="MetaLabelMap">
        select
          id, name, status, create_time, update_time, del_flag, descr, seq, parent_id, type, scene, path
        , is_static, is_run, run_from_time, run_to_time, show_status, show_img, show_text, remark, is_show
        from meta_label
        <where>
            <if test="metaLabel.id != null">
                and id = #{metaLabel.id}
            </if>
            <if test="metaLabel.name != null and metaLabel.name != ''">
                and name like concat('%', #{metaLabel.name}, '%')
            </if>
            <if test="metaLabel.status != null">
                and status = #{metaLabel.status}
            </if>
            <if test="metaLabel.createTime != null">
                and create_time = #{metaLabel.createTime}
            </if>
            <if test="metaLabel.updateTime != null">
                and update_time = #{metaLabel.updateTime}
            </if>
            <if test="metaLabel.delFlag != null">
                and del_flag = #{metaLabel.delFlag}
            </if>
            <if test="metaLabel.descr != null and metaLabel.descr != ''">
                and descr = #{metaLabel.descr}
            </if>
            <if test="metaLabel.seq != null">
                and seq = #{metaLabel.seq}
            </if>
            <if test="metaLabel.parentId != null">
                and parent_id = #{metaLabel.parentId}
            </if>
            <if test="metaLabel.type != null">
                and type = #{metaLabel.type}
            </if>
            <if test="metaLabel.scene != null">
                and scene = #{metaLabel.scene}
            </if>
            <if test="metaLabel.path != null and metaLabel.path != ''">
                and path = #{metaLabel.path}
            </if>
            and del_flag = 0
        </where>
        ORDER BY create_time DESC
        limit #{limitIndex}, #{limitSize}
    </select>

    <sql id="entityQueryCondition">
        <if test="metaLabel.id != null">
            and t1.id = #{metaLabel.id}
        </if>
        <if test="metaLabel.name != null and metaLabel.name != ''">
            and t1.name like concat('%', #{metaLabel.name}, '%')
        </if>
        <if test="metaLabel.status != null">
            and t1.status = #{metaLabel.status}
        </if>
        <if test="metaLabel.createTime != null">
            and t1.create_time = #{metaLabel.createTime}
        </if>
        <if test="metaLabel.updateTime != null">
            and t1.update_time = #{metaLabel.updateTime}
        </if>
        <if test="metaLabel.delFlag != null">
            and t1.del_flag = #{metaLabel.delFlag}
        </if>
        <if test="metaLabel.descr != null and metaLabel.descr != ''">
            and t1.descr = #{metaLabel.descr}
        </if>
        <if test="metaLabel.seq != null">
            and t1.seq = #{metaLabel.seq}
        </if>
        <if test="metaLabel.parentId != null">
            and t1.parent_id = #{metaLabel.parentId}
        </if>
        <if test="metaLabel.type != null">
            and t1.type = #{metaLabel.type}
        </if>
        <if test="metaLabel.scene != null">
            and t1.scene = #{metaLabel.scene}
        </if>
        <if test="metaLabel.path != null and metaLabel.path != ''">
            and t1.path = #{metaLabel.path}
        </if>
        <if test="metaLabel.isStatic != null">
            and t1.is_static = #{metaLabel.isStatic}
        </if>
        and t1.del_flag = 0
    </sql>

    <!--查询指定行数据-->
    <select id="queryAllByLimitExt" resultType="com.wanmi.sbc.bookmeta.entity.MetaLabelExt">
        SELECT
            t1.id,
            t1.name,
            t1.status,
            t1.create_time AS createTime,
            t1.update_time AS updateTime,
            t1.del_flag AS delFlag,
            t1.descr,
            t1.seq,
            t1.parent_id AS parentId,
            t1.type,
            t1.scene,
            t1.path,
            CONCAT_WS("_", t3.`name`, t2.`name`) AS pathName,
            t1.is_static AS isStatic,
            t1.is_run AS isRun,
            t1.run_from_time AS runFromTime,
            t1.run_to_time AS runToTime,
            t1.show_status AS showStatus,
            t1.show_img AS showImg,
            t1.show_text AS showText,
            t1.remark,
            t1.is_show
        FROM
            meta_label t1
            LEFT JOIN meta_label t2 ON t2.id = t1.parent_id AND t2.type = 1
            LEFT JOIN meta_label t3 ON t3.id = t2.parent_id AND t3.type = 1
        <where>
            <include refid="entityQueryCondition" />
        </where>
        ORDER BY t1.create_time DESC
        limit #{limitIndex}, #{limitSize}
    </select>

    <!--统计总行数-->
    <select id="count" resultType="java.lang.Long">
        select count(1)
        from meta_label t1
        <where>
            <include refid="entityQueryCondition" />
        </where>
    </select>

    <select id="countExt" resultType="java.lang.Integer">
        SELECT
            count(1)
        FROM
            meta_label t1
            LEFT JOIN meta_label t2 ON t2.id = t1.parent_id AND t2.type = 1
            LEFT JOIN meta_label t3 ON t3.id = t2.parent_id AND t3.type = 1
        <where>
            <include refid="entityQueryCondition" />
        </where>
    </select>

    <!--新增所有列-->
    <insert id="insert" keyProperty="id" useGeneratedKeys="true">
        insert into meta_label(name, status, create_time, update_time, del_flag, descr, seq, parent_id, type, scene, path,
                               is_static, is_run, run_from_time, run_to_time, show_status, show_img, show_text, remark, is_show)
        values (#{name}, #{status}, #{createTime}, #{updateTime}, #{delFlag}, #{descr}, #{seq}, #{parentId}, #{type}, #{scene}, #{path},
                #{isStatic}, #{isRun}, #{runFromTime}, #{runToTime}, #{showStatus}, #{showImg}, #{showText}, #{remark}, #{isShow})
    </insert>

    <insert id="insertBatch" keyProperty="id" useGeneratedKeys="true">
        insert into meta_label(name, status, create_time, update_time, del_flag, descr, seq, parent_id, type, scene, path,
        is_static, is_run, run_from_time, run_to_time, show_status, show_img, show_text, remark, is_show)
        values
        <foreach collection="entities" item="entity" separator=",">
        (#{entity.name}, #{entity.status}, #{entity.createTime}, #{entity.updateTime}, #{entity.delFlag}, #{entity.descr}, #{entity.seq}, #{entity.parentId}, #{entity.type}, #{entity.scene}, #{entity.path},
            #{entity.isStatic}, #{entity.isRun}, #{entity.runFromTime}, #{entity.runToTime}, #{entity.showStatus}, #{entity.showImg}, #{entity.showText}, #{entity.remark}, #{entity.isShow})
        </foreach>
    </insert>

    <insert id="insertOrUpdateBatch" keyProperty="id" useGeneratedKeys="true">
        insert into meta_label(name, status, create_time, update_time, del_flag, descr, seq, parent_id, type, scene, path,
        is_static, is_run, run_from_time, run_to_time, show_status, show_img, show_text, remark, is_show)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.name}, #{entity.status}, #{entity.createTime}, #{entity.updateTime}, #{entity.delFlag}, #{entity.descr}, #{entity.seq}, #{entity.parentId}, #{entity.type}, #{entity.scene}, #{entity.path},
            #{entity.isStatic}, #{entity.isRun}, #{entity.runFromTime}, #{entity.runToTime}, #{entity.showStatus}, #{entity.showImg}, #{entity.showText}, #{entity.remark}, #{entity.isShow})
        </foreach>
        on duplicate key update
        name = values(name),
        status = values(status),
        create_time = values(create_time),
        update_time = values(update_time),
        del_flag = values(del_flag),
        descr = values(descr),
        seq = values(seq),
        parent_id = values(parent_id),
        type = values(type),
        scene = values(scene),
        path = values(path),
        is_static = values(is_static),
        is_run = values(is_run),
        run_from_time = values(run_from_time),
        run_to_time = values(run_to_time),
        show_status = values(show_status),
        show_img = values(show_img),
        show_text = values(show_text),
        remark = values(remark),
        is_show = values(is_show)
    </insert>

    <!--通过主键修改数据-->
    <update id="update">
        update meta_label
        <set>
            <if test="name != null and name != ''">
                name = #{name},
            </if>
            <if test="status != null">
                status = #{status},
            </if>
            <if test="createTime != null">
                create_time = #{createTime},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime},
            </if>
            <if test="delFlag != null">
                del_flag = #{delFlag},
            </if>
            <if test="descr != null and descr != ''">
                descr = #{descr},
            </if>
            <if test="seq != null">
                seq = #{seq},
            </if>
            <if test="parentId != null">
                parent_id = #{parentId},
            </if>
            <if test="type != null">
                type = #{type},
            </if>
            <if test="scene != null">
                scene = #{scene},
            </if>
            <if test="path != null and path != ''">
                path = #{path},
            </if>
            <if test="isStatic != null">
                is_static = #{isStatic},
            </if>
            <if test="isRun != null">
                is_run = #{isRun},
            </if>
            <if test="runFromTime != null">
                run_from_time = #{runFromTime},
            </if>
            <if test="runToTime != null">
                run_to_time = #{runToTime},
            </if>
            <if test="showStatus != null">
                show_status = #{showStatus},
            </if>
            <if test="showImg != null and showImg != ''">
                show_img = #{showImg},
            </if>
            <if test="showText != null and showText != ''">
                show_text = #{showText},
            </if>
            <if test="remark != null and remark != ''">
                remark = #{remark},
            </if>
            <if test="isShow != null and isShow != ''">
                is_show = #{isShow},
            </if>
        </set>
        where id = #{id}
    </update>

    <!--通过主键删除-->
    <delete id="deleteById">
        update meta_label set del_flag = 1 where id = #{id}
    </delete>

    <!--目录 标签信息-->
    <select id="collectMetaLabelByTime" resultMap="MetaLabelMap">
        select * from meta_label where update_time <![CDATA[ >  ]]> #{beginTime} and update_time <![CDATA[ <=  ]]> #{endTime}
                                      and id <![CDATA[ >  ]]> #{fromId} ORDER BY id asc limit #{pageSize}
    </select>

    <select id="collectMetaLabel" resultMap="MetaLabelMap">
        select * from meta_label where parent_id in
        <foreach collection="parentIds" item="pid" open="(" close=")" separator=",">
            #{pid}
        </foreach>
    </select>

    <select id="getAllLabel" resultType="Map">
        select id,name from meta_label label
    </select>

    <select id="getLabelCate" resultType="Map">
        select id,name,parent_id from meta_label label where type = 1 and parent_id = #{parent_id} and del_flag = 0;
    </select>

<!--    按商品分组-->
    <select id="getLabels" parameterType="java.lang.String" resultMap="MetaLabelMapV2">
        select a.label_id as id, b.name as name, a.goods_id as goods_id, c.goods_name as goods_name, b.is_static
        from meta_label_spu a
                 left join meta_label b on a.label_id = b.id
                 left join goods c on a.goods_id = c.goods_id
        where
           c.del_flag = 0 and b.del_flag = 0
            <if test="name != null">
               and b.name like concat('%',#{name},'%') or c.goods_name like concat('%',#{name},'%')
            </if>
            group by a.goods_id
        limit #{limitIndex}, #{limitSize}
    </select>

<!--    该商品的标签-->
   <select id="getLabelByGoodsIdOrLabelId" resultMap="MetaLabelMapV2" parameterType="com.wanmi.sbc.bookmeta.entity.MetaLabelV2">
       select a.label_id as id, b.name as name, a.goods_id as goods_id, c.goods_name as goods_name, b.is_static
       from meta_label_spu a
                left join meta_label b on a.label_id = b.id
                left join goods c on a.goods_id = c.goods_id
       where
           c.del_flag = 0 and b.del_flag = 0
         <if test="goodsId !=null and goodsId!= '' ">
             and a.goods_id = #{goodsId}
         </if>
       <if test="id !=null and id!= '' ">
           and a.label_id = #{id}
       </if>
   </select>


    <select id="getLabelsCount" parameterType="java.lang.String" resultType="java.lang.Integer">
        select count(1)
        from meta_label_spu a
        left join meta_label b on a.label_id = b.id
        left join goods c on a.goods_id = c.goods_id
        where
        c.del_flag = 0 and b.del_flag = 0
        <if test="name != null">
            and b.name like concat('%',#{name},'%')
        </if>
    </select>

    <select id="isExistGoods" resultType="java.lang.Integer" parameterType="java.lang.String">
        select count(1) from goods where goods_id = #{goods_id}
    </select>

    <select id="getSkuIdBySpuId" resultType="java.util.Map" parameterType="java.lang.String">
        select goods_info_id,goods_info_img,goods_info_name,market_price from goods_info
        where goods_id = #{goodsId} and stock > 0
          and del_flag = 0 order by market_price asc limit 1;
    </select>

    <select id="getScoreBySkuId" resultType="java.lang.String">

        select prop_value
        from goods_prop_detail_rel
        where goods_id = #{goodsId}
          and prop_id = 3


    </select>
    <select id="getIsbnBySkuId" resultType="java.lang.String">

        select a.goods_no as spu, b.prop_value as isbn, c.id
        from goods a
                 left join goods_prop_detail_rel b on a.goods_id = b.goods_id
                 left join meta_book c on b.prop_value = c.isbn
        where b.prop_id = 5 and a.goods_id = #{goodsId}
          and c.id is not null
          and a.del_flag = 0
          and c.del_flag = 0
          and b.del_flag = 0
    </select>
    <select id="getSaleNumSkuId" resultType="java.lang.String">
        select sale_num from t_book_list_goods_publish
        where sku_id = #{goodsId}
          and del_flag = 0;
    </select>
    <select id="getSkuIdBySpuId1" resultType="java.util.Map">
        select goods_info_id,goods_info_img,goods_info_name,market_price from goods_info
        where goods_id = #{goodsId}
          and del_flag = 0 order by market_price asc limit 1;
    </select>

    <insert id="addGoodsLabelSpu" parameterType="com.wanmi.sbc.bookmeta.entity.GoodsLabelSpu">
        insert into meta_label_spu
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="goodsId !=null">
                goods_id,
            </if>
            <if test="labelId != null">
                label_id,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="firstId !=null">
                first_id,
            </if>
            <if test="secondId != null">
                second_id ,
            </if>
            <if test="orderNum!= null">
                order_num
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="goodsId !=null">
                #{goodsId},
            </if>
            <if test="labelId != null">
                #{labelId},
            </if>
            <if test="createTime != null">
                #{createTime},
            </if>
            <if test="firstId !=null">
                #{firstId},
            </if>
            <if test="secondId != null">
                #{secondId},
            </if>
            <if test="orderNum!= null">
                #{orderNum}
            </if>
        </trim>
    </insert>


    <update id="updateGoodsLabelSpu" parameterType="com.wanmi.sbc.bookmeta.entity.GoodsLabelSpu">
        update meta_label_spu
            <set>
                <if test="goodsId !=null">
                    goods_id=#{goodsId},
                </if>

                <if test="labelId != null">
                    label_id=#{labelId},
                </if>
                <if test="firstId !=null">
                    first_id=#{firstId},
                </if>
                <if test="secondId != null">
                    second_id =#{secondId},
                </if>
                <if test="orderNum!= null">
                    order_num=#{orderNum}
                </if>
            </set>
            where id = #{id}
    </update>
    <delete id="deleteGoodsLabel" parameterType="java.lang.Integer">
        delete from meta_label_spu where id = #{id}
    </delete>

    <select id="getGoodsOtherDetail" resultMap="GoodsOtherDetail">
        select goods_id,goods_show_type,goods_detail,order_show_type,order_detail from goods where goods_id = #{goodsId}
    </select>

    <update id="updateGoodsOtherDetail" parameterType="com.wanmi.sbc.bookmeta.entity.GoodsOtherDetail">
        update goods
        <set>
            <if test="goodsShowType!= null">
                goods_show_type=#{goodsShowType},
            </if>
            <if test="goodsDetail!= null">
                goods_detail=#{goodsDetail},
            </if>
            <if test="orderShowType!= null">
                order_show_type=#{orderShowType},
            </if>
            <if test="orderDetail!= null">
                order_detail=#{orderDetail}
            </if>
        </set>
        where goods_id = #{goodsId}
    </update>
</mapper>

