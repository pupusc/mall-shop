<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.wanmi.sbc.bookmeta.mapper.MetaBookMapper">

    <resultMap type="com.wanmi.sbc.bookmeta.entity.MetaBook" id="MetaBookMap">
        <result property="id" column="id" jdbcType="INTEGER"/>
        <result property="isbn" column="isbn" jdbcType="VARCHAR"/>
        <result property="name" column="name" jdbcType="VARCHAR"/>
        <result property="subName" column="sub_name" jdbcType="VARCHAR"/>
        <result property="originName" column="origin_name" jdbcType="VARCHAR"/>
        <result property="publisherId" column="publisher_id" jdbcType="INTEGER"/>
        <result property="producerId" column="producer_id" jdbcType="INTEGER"/>
        <result property="bookGroupId" column="book_group_id" jdbcType="INTEGER"/>
        <result property="bindId" column="bind_id" jdbcType="INTEGER"/>
        <result property="paperId" column="paper_id" jdbcType="INTEGER"/>
        <result property="publishTime" column="publish_time" jdbcType="TIMESTAMP"/>
        <result property="publishBatch" column="publish_batch" jdbcType="INTEGER"/>
        <result property="printTime" column="print_time" jdbcType="TIMESTAMP"/>
        <result property="printBatch" column="print_batch" jdbcType="INTEGER"/>
        <result property="pageCount" column="page_count" jdbcType="INTEGER"/>
        <result property="wordCount" column="word_count" jdbcType="INTEGER"/>
        <result property="price" column="price" jdbcType="NUMERIC"/>
        <result property="sizeLength" column="size_length" jdbcType="INTEGER"/>
        <result property="sizeWidth" column="size_width" jdbcType="INTEGER"/>
        <result property="printSheet" column="print_sheet" jdbcType="INTEGER"/>
        <result property="fitAgeMin" column="fit_age_min" jdbcType="INTEGER"/>
        <result property="fitAgeMax" column="fit_age_max" jdbcType="INTEGER"/>
        <result property="createTime" column="create_time" jdbcType="TIMESTAMP"/>
        <result property="updateTime" column="update_time" jdbcType="TIMESTAMP"/>
        <result property="delFlag" column="del_flag" jdbcType="INTEGER"/>
        <result property="bookClumpId" column="book_clump_id" jdbcType="INTEGER"/>
        <result property="bookGroupDescr" column="book_group_descr" jdbcType="VARCHAR"/>
        <result property="languageId" column="language_id" jdbcType="INTEGER"/>
    </resultMap>

    <!--查询单个-->
    <select id="queryById" resultMap="MetaBookMap">
        select
          id, isbn, name, sub_name, origin_name, publisher_id, producer_id, book_group_id, bind_id, paper_id, publish_time, publish_batch, print_time, print_batch, page_count, word_count, price, size_length, size_width, print_sheet, fit_age_min, fit_age_max, create_time, update_time, del_flag, book_clump_id, book_group_descr, language_id
        from meta_book
        where id = #{id}
            and del_flag = 0
    </select>

    <sql id="entityQueryCondition">
        <if test="metaBook.id != null">
            and t1.id = #{metaBook.id}
        </if>
        <if test="metaBook.isbn != null and metaBook.isbn != ''">
            and t1.isbn = #{metaBook.isbn}
        </if>
        <if test="metaBook.name != null and metaBook.name != ''">
            and t1.name = #{metaBook.name}
        </if>
        <if test="metaBook.subName != null and metaBook.subName != ''">
            and t1.sub_name = #{metaBook.subName}
        </if>
        <if test="metaBook.originName != null and metaBook.originName != ''">
            and t1.origin_name = #{metaBook.originName}
        </if>
        <if test="metaBook.publisherId != null">
            and t1.publisher_id = #{metaBook.publisherId}
        </if>
        <if test="metaBook.producerId != null">
            and t1.producer_id = #{metaBook.producerId}
        </if>
        <if test="metaBook.bookGroupId != null">
            and t1.book_group_id = #{metaBook.bookGroupId}
        </if>
        <if test="metaBook.bindId != null">
            and t1.bind_id = #{metaBook.bindId}
        </if>
        <if test="metaBook.paperId != null">
            and t1.paper_id = #{metaBook.paperId}
        </if>
        <if test="metaBook.publishTime != null">
            and t1.publish_time = #{metaBook.publishTime}
        </if>
        <if test="metaBook.publishBatch != null">
            and t1.publish_batch = #{metaBook.publishBatch}
        </if>
        <if test="metaBook.printTime != null">
            and t1.print_time = #{metaBook.printTime}
        </if>
        <if test="metaBook.printBatch != null">
            and t1.print_batch = #{metaBook.printBatch}
        </if>
        <if test="metaBook.pageCount != null">
            and t1.page_count = #{metaBook.pageCount}
        </if>
        <if test="metaBook.wordCount != null">
            and t1.word_count = #{metaBook.wordCount}
        </if>
        <if test="metaBook.price != null">
            and t1.price = #{metaBook.price}
        </if>
        <if test="metaBook.sizeLength != null">
            and t1.size_length = #{metaBook.sizeLength}
        </if>
        <if test="metaBook.sizeWidth != null">
            and t1.size_width = #{metaBook.sizeWidth}
        </if>
        <if test="metaBook.printSheet != null">
            and t1.print_sheet = #{metaBook.printSheet}
        </if>
        <if test="metaBook.fitAgeMin != null">
            and t1.fit_age_min = #{metaBook.fitAgeMin}
        </if>
        <if test="metaBook.fitAgeMax != null">
            and t1.fit_age_max = #{metaBook.fitAgeMax}
        </if>
        <if test="metaBook.createTime != null">
            and t1.create_time = #{metaBook.createTime}
        </if>
        <if test="metaBook.updateTime != null">
            and t1.update_time = #{metaBook.updateTime}
        </if>
        <if test="metaBook.delFlag != null">
            and t1.del_flag = #{metaBook.delFlag}
        </if>
        <if test="metaBook.bookClumpId != null">
            and t1.book_clump_id = #{metaBook.bookClumpId}
        </if>
        <if test="metaBook.bookGroupDescr != null and metaBook.bookGroupDescr != ''">
            and t1.book_group_descr = #{metaBook.bookGroupDescr}
        </if>
        <if test="metaBook.languageId != null">
            and t1.language_id = #{metaBook.languageId}
        </if>
        and t1.del_flag = 0
    </sql>

    <!--查询指定行数据-->
    <select id="queryAllByLimit" resultMap="MetaBookMap">
        select
          id, isbn, name, sub_name, origin_name, publisher_id, producer_id, book_group_id, bind_id, paper_id, publish_time, publish_batch, print_time, print_batch, page_count, word_count, price, size_length, size_width, print_sheet, fit_age_min, fit_age_max, create_time, update_time, del_flag, book_clump_id, book_group_descr, language_id
        from meta_book t1
        <where>
            <include refid="entityQueryCondition" />
        </where>
        ORDER BY t1.create_time DESC
        limit #{limitIndex}, #{limitSize}
    </select>

    <select id="queryAllByLimitExt" resultMap="MetaBookMap">
        SELECT w1.*
        FROM meta_book w1
        JOIN
        (
            SELECT
                DISTINCT t1.id
            FROM
                meta_book t1
                LEFT JOIN meta_publisher t2 ON t2.id=t1.publisher_id AND t2.del_flag=0
                LEFT JOIN meta_book_figure t3 ON t3.book_id = t1.id AND t3.figure_type=1 AND t3.del_flag=0
                LEFT JOIN meta_figure t4 ON t4.id = t3.figure_id
            <where>
                <include refid="entityQueryCondition" />

                <if test="metaBook.nameLike != null and metaBook.nameLike != ''">
                    and t1.name like concat('%', #{metaBook.nameLike}, '%')
                </if>
                <if test="metaBook.authorLike != null and metaBook.authorLike != ''">
                    and t4.name like concat('%', #{metaBook.authorLike}, '%')
                </if>
                <if test="metaBook.publisherLike != null and metaBook.publisherLike != ''">
                    and t2.name like concat('%', #{metaBook.publisherLike}, '%')
                </if>
            </where>
        ) w2 ON w2.id = w1.id
        ORDER BY w1.create_time DESC
        limit #{limitIndex}, #{limitSize}
    </select>

    <!--统计总行数-->
    <select id="count" resultType="java.lang.Long">
        select count(1)
        from meta_book t1
        <where>
            <include refid="entityQueryCondition" />
        </where>
    </select>

    <select id="countExt" resultType="java.lang.Integer">
        SELECT
            count(DISTINCT t1.id)
        FROM
            meta_book t1
            LEFT JOIN meta_publisher t2 ON t2.id=t1.publisher_id AND t2.del_flag=0
            LEFT JOIN meta_book_figure t3 ON t3.book_id = t1.id AND t3.figure_type=1 AND t3.del_flag=0
            LEFT JOIN meta_figure t4 ON t4.id = t3.figure_id
        <where>
            <include refid="entityQueryCondition" />

            <if test="metaBook.nameLike != null and metaBook.nameLike != ''">
                and t1.name like concat('%', #{metaBook.nameLike}, '%')
            </if>
            <if test="metaBook.authorLike != null and metaBook.authorLike != ''">
                and t4.name like concat('%', #{metaBook.authorLike}, '%')
            </if>
            <if test="metaBook.publisherLike != null and metaBook.publisherLike != ''">
                and t2.name like concat('%', #{metaBook.publisherLike}, '%')
            </if>
        </where>
    </select>

    <!--新增所有列-->
    <insert id="insert" keyProperty="id" useGeneratedKeys="true">
        insert into meta_book(isbn, name, sub_name, origin_name, publisher_id, producer_id, book_group_id, bind_id, paper_id, publish_time, publish_batch, print_time, print_batch, page_count, word_count, price, size_length, size_width, print_sheet, fit_age_min, fit_age_max, create_time, update_time, del_flag, book_clump_id, book_group_descr, language_id)
        values (#{isbn}, #{name}, #{subName}, #{originName}, #{publisherId}, #{producerId}, #{bookGroupId}, #{bindId}, #{paperId}, #{publishTime}, #{publishBatch}, #{printTime}, #{printBatch}, #{pageCount}, #{wordCount}, #{price}, #{sizeLength}, #{sizeWidth}, #{printSheet}, #{fitAgeMin}, #{fitAgeMax}, #{createTime}, #{updateTime}, #{delFlag}, #{bookClumpId}, #{bookGroupDescr}, #{languageId})
    </insert>

    <insert id="insertBatch" keyProperty="id" useGeneratedKeys="true">
        insert into meta_book(isbn, name, sub_name, origin_name, publisher_id, producer_id, book_group_id, bind_id, paper_id, publish_time, publish_batch, print_time, print_batch, page_count, word_count, price, size_length, size_width, print_sheet, fit_age_min, fit_age_max, create_time, update_time, del_flag, book_clump_id, book_group_descr, language_id)
        values
        <foreach collection="entities" item="entity" separator=",">
        (#{entity.isbn}, #{entity.name}, #{entity.subName}, #{entity.originName}, #{entity.publisherId}, #{entity.producerId}, #{entity.bookGroupId}, #{entity.bindId}, #{entity.paperId}, #{entity.publishTime}, #{entity.publishBatch}, #{entity.printTime}, #{entity.printBatch}, #{entity.pageCount}, #{entity.wordCount}, #{entity.price}, #{entity.sizeLength}, #{entity.sizeWidth}, #{entity.printSheet}, #{entity.fitAgeMin}, #{entity.fitAgeMax}, #{entity.createTime}, #{entity.updateTime}, #{entity.delFlag}, #{entity.bookClumpId}, #{entity.bookGroupDescr}, #{entity.languageId})
        </foreach>
    </insert>

    <insert id="insertOrUpdateBatch" keyProperty="id" useGeneratedKeys="true">
        insert into meta_book(isbn, name, sub_name, origin_name, publisher_id, producer_id, book_group_id, bind_id, paper_id, publish_time, publish_batch, print_time, print_batch, page_count, word_count, price, size_length, size_width, print_sheet, fit_age_min, fit_age_max, create_time, update_time, del_flag, book_clump_id, book_group_descr, language_id)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.isbn}, #{entity.name}, #{entity.subName}, #{entity.originName}, #{entity.publisherId}, #{entity.producerId}, #{entity.bookGroupId}, #{entity.bindId}, #{entity.paperId}, #{entity.publishTime}, #{entity.publishBatch}, #{entity.printTime}, #{entity.printBatch}, #{entity.pageCount}, #{entity.wordCount}, #{entity.price}, #{entity.sizeLength}, #{entity.sizeWidth}, #{entity.printSheet}, #{entity.fitAgeMin}, #{entity.fitAgeMax}, #{entity.createTime}, #{entity.updateTime}, #{entity.delFlag}, #{entity.bookClumpId}, #{entity.bookGroupDescr}, #{entity.languageId})
        </foreach>
        on duplicate key update
        isbn = values(isbn),
        name = values(name),
        sub_name = values(sub_name),
        origin_name = values(origin_name),
        publisher_id = values(publisher_id),
        producer_id = values(producer_id),
        book_group_id = values(book_group_id),
        bind_id = values(bind_id),
        paper_id = values(paper_id),
        publish_time = values(publish_time),
        publish_batch = values(publish_batch),
        print_time = values(print_time),
        print_batch = values(print_batch),
        page_count = values(page_count),
        word_count = values(word_count),
        price = values(price),
        size_length = values(size_length),
        size_width = values(size_width),
        print_sheet = values(print_sheet),
        fit_age_min = values(fit_age_min),
        fit_age_max = values(fit_age_max),
        create_time = values(create_time),
        update_time = values(update_time),
        del_flag = values(del_flag),
        book_clump_id = values(book_clump_id),
        book_group_descr = values(book_group_descr),
        language_id = values(language_id)
    </insert>

    <!--通过主键修改数据-->
    <update id="update">
        update meta_book
        <set>
            <if test="isbn != null and isbn != ''">
                isbn = #{isbn},
            </if>
            <if test="name != null and name != ''">
                name = #{name},
            </if>
            <if test="subName != null and subName != ''">
                sub_name = #{subName},
            </if>
            <if test="originName != null and originName != ''">
                origin_name = #{originName},
            </if>
            <if test="publisherId != null">
                publisher_id = #{publisherId},
            </if>
            <if test="producerId != null">
                producer_id = #{producerId},
            </if>
            <if test="bookGroupId != null">
                book_group_id = #{bookGroupId},
            </if>
            <if test="bindId != null">
                bind_id = #{bindId},
            </if>
            <if test="paperId != null">
                paper_id = #{paperId},
            </if>
            <if test="publishTime != null">
                publish_time = #{publishTime},
            </if>
            <if test="publishBatch != null">
                publish_batch = #{publishBatch},
            </if>
            <if test="printTime != null">
                print_time = #{printTime},
            </if>
            <if test="printBatch != null">
                print_batch = #{printBatch},
            </if>
            <if test="pageCount != null">
                page_count = #{pageCount},
            </if>
            <if test="wordCount != null">
                word_count = #{wordCount},
            </if>
            <if test="price != null">
                price = #{price},
            </if>
            <if test="sizeLength != null">
                size_length = #{sizeLength},
            </if>
            <if test="sizeWidth != null">
                size_width = #{sizeWidth},
            </if>
            <if test="printSheet != null">
                print_sheet = #{printSheet},
            </if>
            <if test="fitAgeMin != null">
                fit_age_min = #{fitAgeMin},
            </if>
            <if test="fitAgeMax != null">
                fit_age_max = #{fitAgeMax},
            </if>
            <if test="createTime != null">
                create_time = #{createTime},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime},
            </if>
            <if test="delFlag != null">
                del_flag = #{delFlag},
            </if>
            <if test="bookClumpId != null">
                book_clump_id = #{bookClumpId},
            </if>
            <if test="bookGroupDescr != null and bookGroupDescr != ''">
                book_group_descr = #{bookGroupDescr},
            </if>
            <if test="languageId != null">
                language_id = #{languageId},
            </if>
        </set>
        where id = #{id}
    </update>

    <!--通过主键删除-->
    <delete id="deleteById">
        update meta_book set del_flag = 1 where id = #{id}
    </delete>

    <!--删除关联丛书-->
    <update id="removeBookClumpId">
        update meta_book set book_clump_id = null where book_clump_id = #{id}
    </update>

    <!--删除关联书组-->
    <update id="removeBookGroupId">
        update meta_book set book_group_id = null where book_group_id = #{id}
    </update>

    <!--删除关联出品方-->
    <update id="removeProducerId">
        update meta_book set producer_id = null where producer_id = #{id}
    </update>

    <!--删除关联出品方-->
    <update id="removePublisherId">
        update meta_book set publisher_id = null where publisher_id = #{id}
    </update>

    <!--  搜索所有isbn商品  -->
    <select id="collectMetaBookByTime" resultMap="MetaBookMap">
        select * from meta_book book where update_time <![CDATA[ >  ]]> #{beginTime} and update_time <![CDATA[ <=  ]]> #{endTime}
                                       and id <![CDATA[ >  ]]> #{fromId} ORDER BY id asc limit #{pageSize}
    </select>
    
    <select id="collectMetaBookByIds" resultMap="MetaBookMap">
        select * from meta_book book where id in
        <foreach collection="bookIds" item="bookId" open="(" close=")" separator=",">
            #{bookId}
        </foreach>
    </select>


    <select id="collectMetaBookByPublisherIds" resultMap="MetaBookMap">
        select * from meta_book book where publisher_id in
        <foreach collection="publisherIds" item="publisherId" open="(" close=")" separator=",">
            #{publisherId}
        </foreach>
    </select>


    <select id="collectMetaBookByBookGroupIds" resultMap="MetaBookMap">
        select * from meta_book book where book_group_id in
        <foreach collection="bookGroupIds" item="bookGroupId" open="(" close=")" separator=",">
            #{bookGroupId}
        </foreach>
    </select>


    <select id="collectMetaBookByBookProducerIds" resultMap="MetaBookMap">
        select * from meta_book book where producer_id in
        <foreach collection="bookProducerIds" item="bookProducerId" open="(" close=")" separator=",">
            #{bookProducerId}
        </foreach>
    </select>


    <select id="collectMetaBookByCondition" resultMap="MetaBookMap">
        select * from meta_book book where del_flag = 0 and isbn in
        <foreach collection="isbns" item="isbn" open="(" close=")" separator=",">
            #{isbn}
        </foreach>
    </select>

    <update id="updateDelflag" >
        update meta_book set del_flag = del_flag where id = #{id}
    </update>

</mapper>

