<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.wanmi.sbc.crm.rfmgroupstatistics.mapper.RfmSystemGroupMapper">

    <resultMap id="BaseResultMap" type="com.wanmi.sbc.crm.bean.vo.RfmGroupDataVo">
        <id column="id" jdbcType="BIGINT" property="id"/>
        <result column="groupName" jdbcType="VARCHAR" property="groupName" />
        <result column="groupDefinition" jdbcType="VARCHAR" property="groupDefinition" />
        <result column="groupAdvise" jdbcType="VARCHAR" property="groupAdvise" />
    </resultMap>
    <resultMap id="GroupInfoResultMap" type="com.wanmi.sbc.crm.bean.vo.GroupInfoVo">
        <id column="id" jdbcType="BIGINT" property="id"/>
        <result column="groupId" jdbcType="VARCHAR" property="groupId" />
        <result column="groupName" jdbcType="VARCHAR" property="groupName" />
        <result column="type" jdbcType="BIGINT" property="type" />
    </resultMap>
    <select id="queryRfmGroupList" resultMap="BaseResultMap">
        SELECT
            rsg.id as id,
            rsg.name as groupName,
            rsg.definition as groupDefinition,
            rsg.advise as groupAdvise
        FROM rfm_system_group rsg
        order by rsg.id
    </select>

    <select id="queryAllGroupList" parameterType="com.wanmi.sbc.crm.api.request.rfmgroupstatistics.GroupInfoListRequest" resultMap="GroupInfoResultMap">
        SELECT
            rsg.id AS id,
            rsg.NAME AS groupName,
            CONCAT('0_',rsg.id) AS groupId,
            0 as type
        FROM
            rfm_system_group rsg
        where 1=1
        <if test="groupName!=null and groupName !=''">
            and rsg.NAME like concat('%',#{groupName},'%')
        </if>
        UNION ALL
        select res.* from (
            SELECT
                cg.id AS id,
                cg.group_name AS groupName,
                CONCAT('1_',cg.id) AS groupId,
              1 as type
            FROM
                custom_group cg
            where 1=1
            <if test="groupName!=null and groupName !=''">
                and cg.group_name like concat('%',#{groupName},'%')
            </if>
            order by cg.create_time desc) res
        <if test="limit!=null">
            limit #{limit}
        </if>
    </select>
</mapper>